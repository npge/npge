language: cpp

matrix:

  include:

    - env: NPGE_TARGET=linux NPGE_TESTDIR=npge-build-linux
      os: linux
      dist: trusty
      sudo: required
      compiler: gcc

    - env: NPGE_TARGET=windows MXE_TARGET=i686-w64-mingw32.static
      os: linux
      dist: trusty
      sudo: required
      compiler: gcc

    - env: NPGE_TARGET=windows MXE_TARGET=x86_64-w64-mingw32.static
      os: linux
      dist: trusty
      sudo: required
      compiler: gcc

    - env: NPGE_TARGET=mac NPGE_TESTDIR=npge-build-mac
      os: osx
      osx_image: xcode7.2
      compiler: clang

install:
  - ./install.sh

script:
  - ./${NPGE_TARGET}/build.sh
  - if [ -n "$NPGE_TESTDIR" ]; then make test -C "$NPGE_TESTDIR"; fi

before_deploy:
  - ./${NPGE_TARGET}/deploy.sh
  - ls -l npge-build-*/npge_*
  - sha256sum npge-build-*/npge_*
  - awk 'sub("$", "\r")' README.md > README.txt

deploy:
  provider: releases
  api_key:
    secure: EsGeEACqIjkByNncKeRnrxfm0vNwaqwJmOaKXHC+nqJ3LOcQwP7Y5bbw8G8vSBwa2umTH9ZKt4HZV6HroYmD0kvoxjxlLQVcIfsjnSuOHp/oIMRJVXpaF1uejWUYHgZ7K5IlBQl1CWWnjH7NFypCvNt6lrl5oo64oCY3/tIeZmc=
  file:
      - "$(ls npge-build-linux/npge_*.tar.gz 2>/dev/null || echo README.txt)"
      - "$(ls npge-build-windows*/npge_*.exe 2>/dev/null || echo README.txt)"
      - "$(ls npge-build-windows*/npge_*.zip 2>/dev/null || echo README.txt)"
      - "$(ls npge-build-mac*/npge_* 2>/dev/null || echo README.txt)"
  skip_cleanup: true
  on:
    tags: true
