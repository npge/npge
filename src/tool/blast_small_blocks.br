#! ${BRMETA}

pipe ResolveIter {
    max_loops 2;
    add Subtract target=otherpart other=target;
    add OverlapsResolver2 target=resolved other=otherpart --min-distance:=105;
    add ExternalAligner target=resolved;
    add CutGaps target=resolved;
    #add Filter target=resolved --min-fragment:=100;
    add Filter target=resolved;
    add Union target=target other=resolved;
};

pipe ResolveIter2 {
    add Union target=otherpart other=other;
    add Filter target=otherpart;
    add ResolveIter otherpart=otherpart;
    add Subtract target=other other=otherpart;
};

pipe ResolveHits {
    add SequencesFromOther target=target other=other;
    add Union target=otherbackup other=other;

    add ResolveIter2 --min-fragment:=750;
    add ResolveIter2 --min-fragment:=500;
    add ResolveIter2 --min-fragment:=250;
    add ResolveIter2 --min-fragment:=200;
    add ResolveIter2 --min-fragment:=160;
    add ResolveIter2 --min-fragment:=140;
    add ResolveIter2 --min-fragment:=120;
    add ResolveIter2 --min-fragment:=110;

    add OverlaplessUnion target=target other=otherbackup;
};

pipe Align {
    add ExternalAligner;
    add MoveGaps;
    add CutGaps;
};

pipe PrepareForConsensus {
    # cause crash
    # Fragment::alignment_length() const:
    # Assertation `result >= length()' failed
    #add StickBoundaries --min-distance:=15;
    add Connector;
    add Rest target=target other=target;
    add Align;
};

pipe GoDeep {
    #add PrepareForConsensus target=other;
    add ConSeq target=cons other=other;
    add Rest target=cons other=cons; # seqs -> 1-blocks
    add AddBlastBlocks target=hits other=cons;
    add ResolveHits target=target other=hits;
};

pipe Improvements {
    #add StickBoundaries;
    #add OverlapsResolver2 target=target other=target --min-distance:=100;
    add Filter;
    add Connector;
    #add FragmentsExpander --max-overlap:=0 --workers:=1; # FIXME does overlaps
    add Rest target=target other=target;
    add Filter --min-block:=1;
};

pipe GoBack { # seqbs = block set with sequences for target
    add SequencesFromOther target=target other=seqbs;
    add Improvements target=other;
    add DeConSeq target=target other=other;
};

pipe X {
    add AddBlocks target=other;

    add Union target=small other=other;
    add Union target=large other=other;

    add Filter target=small
        --min-fragment:=0 --max-fragment:=-1 --min-block:=1 --max-block:=2;

    add Filter target=large
        --min-fragment:=0 --max-fragment:=-1 --min-block:=3;

    add GoDeep target=cleanhits1 other=small;
    add GoBack target=target other=cleanhits1 seqbs=small;

    add Align;
    add Filter;

    add OverlaplessUnion target=target other=small;

    add Union target=target other=large;
    add OutputPipe;
};

run X;

