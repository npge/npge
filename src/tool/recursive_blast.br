#! ${BRMETA}

pipe ResolveIter {
    max_loops 2;
    add Subtract target=otherpart other=target;
    add OverlapsResolver2 target=resolved other=otherpart --min-distance:=105;
    add ExternalAligner target=resolved;
    add CutGaps target=resolved;
    #add Filter target=resolved --min-fragment:=100;
    add Filter target=resolved;
    add Union target=target other=resolved;
};

pipe ResolveIter2 {
    add Union target=otherpart other=other;
    add Filter target=otherpart;
    add ResolveIter otherpart=otherpart;
    add Subtract target=other other=otherpart;
};

pipe ResolveHits {
    add SequencesFromOther target=target other=other;
    add Union target=otherbackup other=other;

    add ResolveIter2 --min-fragment:=750;
    add ResolveIter2 --min-fragment:=500;
    add ResolveIter2 --min-fragment:=250;
    add ResolveIter2 --min-fragment:=200;
    add ResolveIter2 --min-fragment:=160;
    add ResolveIter2 --min-fragment:=140;
    add ResolveIter2 --min-fragment:=120;
    add ResolveIter2 --min-fragment:=110;

    add OverlaplessUnion target=target other=otherbackup;
};

pipe Align {
    add ExternalAligner;
    add MoveGaps;
    add CutGaps;
};

pipe PrepareForConsensus {
    # cause crash
    # Fragment::alignment_length() const:
    # Assertation `result >= length()' failed
    #add StickBoundaries --min-distance:=15;
    add Connector;
    add Rest target=target other=target;
    add Align;
};

pipe GoDeep {
    add PrepareForConsensus target=other;
    add ConSeq target=cons other=other;
    add Rest target=cons other=cons; # seqs -> 1-blocks
    add AddBlastBlocks target=hits other=cons;
    add ResolveHits target=target other=hits;
};

pipe Improvements {
    #add StickBoundaries;
    #add OverlapsResolver2 target=target other=target --min-distance:=100;
    add Filter;
    add Connector;
    #add FragmentsExpander --max-overlap:=0 --workers:=1; # FIXME does overlaps
    add Rest target=target other=target;
    add Filter --min-block:=1;
};

pipe GoBack { # seqbs = block set with sequences for target
    add SequencesFromOther target=target other=seqbs;
    add Improvements target=other;
    add DeConSeq target=target other=other;
};

pipe RecursiveBlast {
    name "consensus->blast->consensus->blast..."

    add AddBlocks target=other;

    # FIXME do not write to /tmp/cleanhits?.fasta
    add GoDeep target=cleanhits1 other=other;
    add OutputPipe target=cleanhits1 --out-file:=/tmp/cleanhits1.fasta;
    add GoDeep target=cleanhits2 other=cleanhits1;
    add OutputPipe target=cleanhits2 --out-file:=/tmp/cleanhits2.fasta;
    add GoDeep target=cleanhits3 other=cleanhits2;
    add OutputPipe target=cleanhits3 --out-file:=/tmp/cleanhits3.fasta;
    add GoDeep target=cleanhits4 other=cleanhits3;
    add OutputPipe target=cleanhits4 --out-file:=/tmp/cleanhits4.fasta;
    add GoDeep target=cleanhits5 other=cleanhits4;
    add OutputPipe target=cleanhits5 --out-file:=/tmp/cleanhits5.fasta;

    add GoBack target=back4 other=cleanhits5 seqbs=cleanhits4;
    add GoBack target=back3 other=cleanhits4 seqbs=cleanhits3;
    add GoBack target=back2 other=cleanhits3 seqbs=cleanhits2;
    add GoBack target=back1 other=cleanhits2 seqbs=cleanhits1;
    add GoBack target=target other=cleanhits1 seqbs=other;

    add Improvements;

    #add Filter;
    #add FragmentsExpander --max-overlap:=0 --workers:=1;
    add OutputPipe --out-file:=/tmp/not-aligned.fasta;
    add Align;
    #add AddBlastBlocks target=hitslast other=target;
    #add OverlaplessUnion target=target other=hitslast;
    #add Align;

    add OutputPipe;
};

run RecursiveBlast;

