/*
 * bloomrepeats, Find genomic repeats, using Bloom filter based prefiltration
 * Copyright (C) 2014 Boris Nagaev
 *
 * See the LICENSE file for terms of use.
 */

#ifndef BR_CONFIG_HPP_
#define BR_CONFIG_HPP_

namespace bloomrepeats {

const int MIN_LENGTH = ${MIN_LENGTH};
const double MIN_IDENTITY = ${MIN_IDENTITY};
const double MAX_EVALUE = ${MAX_EVALUE};
const double MAX_SPREADING = ${MAX_SPREADING};
const double MAX_GAPS = ${MAX_GAPS};
const int EXPANDER_BATCH = ${EXPANDER_BATCH};
const int EXPANDER_MAX_OVERLAP = ${EXPANDER_MAX_OVERLAP};
const int ALIGNER_MAX_ERRORS = EXPANDER_BATCH* (1 - MIN_IDENTITY) + 1;
const int ALIGNER_GAP_RANGE = ${ALIGNER_GAP_RANGE};
const int ALIGNER_GAP_PENALTY = ${ALIGNER_GAP_PENALTY};
const int ALIGNER_MISMATCH_PENALTY = ${ALIGNER_MISMATCH_PENALTY};
const int BOUNDARIES_MIN_DISTANCE = ${BOUNDARIES_MIN_DISTANCE};
const int JOINER_MAX_DIST = ${JOINER_MAX_DIST};
const double JOINER_RATIO_TO_FRAGMENT = ${JOINER_RATIO_TO_FRAGMENT};
const double JOINER_GAP_RATIO = ${JOINER_GAP_RATIO};
const int SPLIT_REPEATS_MIN_MUTATIONS =
    ${SPLIT_REPEATS_MIN_MUTATIONS};
const int SPLIT_REPEATS_MIN_DIAGNOSTIC_MUTATIONS =
    ${SPLIT_REPEATS_MIN_DIAGNOSTIC_MUTATIONS};
const int MISMATCH_CHECK = ${MISMATCH_CHECK};
const int GAP_CHECK = ${GAP_CHECK};
const int ALIGNED_CHECK = ${ALIGNED_CHECK};

}

#endif

