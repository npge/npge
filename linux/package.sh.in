#!/bin/bash

set -xue

rm -fr npge-${VERSION}
mkdir npge-${VERSION}

BLASTVER=2.2.31

if [ `uname -m` = 'x86_64' ] ; then
    BLASTARCH='x64'
    NPGEARCH='64'
else
    # http://www.ncbi.nlm.nih.gov/mailman/pipermail/blast-announce/2015q2/000112.html
    echo 'No 32-bit BLAST is available for Linux'
    exit 1
fi

BLASTSERVER=ftp.ncbi.nlm.nih.gov
BLASTPATH=blast/executables/blast+/
BLASTTAR=ncbi-blast-$BLASTVER+-$BLASTARCH-linux.tar.gz
BLASTURL=http://$BLASTSERVER/$BLASTPATH/$BLASTVER/$BLASTTAR

wget -N $BLASTURL

tar -xf $BLASTTAR

cp ncbi-blast-$BLASTVER+/bin/makeblastdb npge-${VERSION}/
cp ncbi-blast-$BLASTVER+/bin/blastn npge-${VERSION}/

cd npge-${VERSION}
check_sha256=${CMAKE_CURRENT_SOURCE_DIR}/check-$BLASTARCH.sha256
if ! ( sha256sum --check $check_sha256 ) then
    echo 'Checksums of binaries do not match' $check_sha256
    exit
fi
cd ..

cp ncbi-blast-$BLASTVER+/bin/makeblastdb \
    ${PROJECT_BINARY_DIR}/src/test/
cp ncbi-blast-$BLASTVER+/bin/blastn \
    ${PROJECT_BINARY_DIR}/src/test/
prevpath=`pwd`
cd ${PROJECT_BINARY_DIR}
if ! ( make test ) then
    echo 'make test failed! Aborted'
    exit
fi
cd $prevpath

cp ${PROJECT_SOURCE_DIR}/README.md npge-${VERSION}/README.txt

cp \
    ${PROJECT_SOURCE_DIR}/examples/Brucella/5genomes.tsv \
    npge-${VERSION}/genomes.tsv

cp ${PROJECT_BINARY_DIR}/src/tool/npge \
    ${PROJECT_BINARY_DIR}/src/gui/qnpge \
    npge-${VERSION}

EXES="blastn makeblastdb npge qnpge"
cd npge-${VERSION}
strip $EXES
upx --brute $EXES
chmod +x $EXES
cd ..

pandoc ${PROJECT_SOURCE_DIR}/README.md \
    ${PANDOC_OPTS} > npge-${VERSION}/README.html
pandoc ${PROJECT_SOURCE_DIR}/doc/API.md \
    ${PANDOC_OPTS} > npge-${VERSION}/API.html

cat ${PROJECT_SOURCE_DIR}/LICENSE \
    ${PROJECT_SOURCE_DIR}/gpl2.txt \
    ${PROJECT_SOURCE_DIR}/gpl3.txt \
    > npge-${VERSION}/LICENSE.txt

cp \
    ${PROJECT_SOURCE_DIR}/AUTHORS \
    npge-${VERSION}/AUTHORS.txt

cp ${PROJECT_SOURCE_DIR}/npge.ico npge-${VERSION}

${PROJECT_BINARY_DIR}/src/tool/npge AllProcessors \
    --out npge-${VERSION}/AllProcessors.html
${PROJECT_BINARY_DIR}/src/tool/npge AllOptions \
    --out npge-${VERSION}/AllOptions.html
${PROJECT_BINARY_DIR}/src/tool/npge -g \
    > npge-${VERSION}/npge.conf

tar --numeric-owner --owner=0 --group=0 \
    -czf npge_${VERSION}_lin$NPGEARCH.tar.gz npge-${VERSION}

